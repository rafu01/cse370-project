# Generated by Django 3.1.2 on 2020-12-07 20:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('price', models.FloatField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(8)])),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.MinLengthValidator(8)])),
                ('credit_info', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.MinLengthValidator(12)])),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('bookings', models.ManyToManyField(blank=True, to='showroom.Booking')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('year', models.CharField(max_length=4, validators=[django.core.validators.MinLengthValidator(4)])),
                ('description', models.TextField(blank=True)),
                ('image_url1', models.CharField(blank=True, default='', max_length=2083)),
                ('image_url2', models.CharField(blank=True, default='', max_length=2083)),
                ('image_url3', models.CharField(blank=True, default='', max_length=2083)),
                ('image_url4', models.CharField(blank=True, default='', max_length=2083)),
                ('image_url5', models.CharField(blank=True, default='', max_length=2083)),
                ('bookings', models.ManyToManyField(blank=True, to='showroom.Booking')),
                ('customers', models.ManyToManyField(blank=True, to='showroom.Customer')),
                ('manufacturers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='showroom.manufacturer')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_showroom.products_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Accesories',
            fields=[
                ('products_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='showroom.products')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('showroom.products',),
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('products_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='showroom.products')),
                ('mileage', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('showroom.products',),
        ),
        migrations.CreateModel(
            name='MessageEnquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('customers', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='showroom.customer')),
            ],
        ),
        migrations.AddField(
            model_name='manufacturer',
            name='product',
            field=models.ManyToManyField(blank=True, to='showroom.Products'),
        ),
        migrations.AddField(
            model_name='customer',
            name='messages',
            field=models.ManyToManyField(blank=True, to='showroom.MessageEnquiry'),
        ),
        migrations.AddField(
            model_name='customer',
            name='product',
            field=models.ManyToManyField(blank=True, to='showroom.Products'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='customers',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='showroom.customer'),
        ),
        migrations.AddField(
            model_name='booking',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='showroom.products'),
        ),
    ]
